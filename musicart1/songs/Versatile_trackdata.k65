/*
 * TIATracker music player
 * Copyright 2016 Andre "Kylearan" Wichmann
 * Website: https://bitbucket.org/kylearan/tiatracker
 * Email: andre.wichmann@gmx.de
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Song author: glafouk
 * Song name: versatile
 */


data tt_versatile_song {
    &<tt_versatile_InsCtrlTable-1 &>tt_versatile_InsCtrlTable-1
    &<tt_versatile_InsADIndexes-1 &>tt_versatile_InsADIndexes-1
    &<tt_versatile_InsSustainIndexes-1 &>tt_versatile_InsSustainIndexes-1
    &<tt_versatile_InsReleaseIndexes-1 &>tt_versatile_InsReleaseIndexes-1
    &<tt_versatile_InsFreqVolTable &>tt_versatile_InsFreqVolTable
    &<tt_versatile_PercIndexes-17 &>tt_versatile_PercIndexes-17
    &<tt_versatile_PercFreqTable-1 &>tt_versatile_PercFreqTable-1
    &<tt_versatile_PercCtrlVolTable-1 &>tt_versatile_PercCtrlVolTable-1
    &<tt_versatile_PatternSpeeds &>tt_versatile_PatternSpeeds
    &<tt_versatile_SequenceTable &>tt_versatile_SequenceTable
    &<tt_versatile_PatternPtrLo &>tt_versatile_PatternPtrLo
    &<tt_versatile_PatternPtrHi &>tt_versatile_PatternPtrHi
tt_versatile_flags:
    1 [10-1] [10-1] 0
tt_versatile_initdata:
    0 8
    // put any table that might be empty here to avoid warning
tt_versatile_PatternSpeeds:

tt_versatile_PercIndexes:

tt_versatile_PercFreqTable:

tt_versatile_PercCtrlVolTable:

}

data tt_versatile_InsCtrlTable {
        0x04 0x0c

}
data tt_versatile_InsADIndexes {
        0x00 0x00

}
data tt_versatile_InsSustainIndexes {
        0x00 0x00

}
data tt_versatile_InsReleaseIndexes {
        0x01 0x01

}
data tt_versatile_InsFreqVolTable {
// 0+1: Chrodz
        0x8c 0x00 0x8b 0x8a 0x88 0x84 0x00

}

// mel0a
data tt_versatile_pattern0 {
        0x5d 0x08 0x5f 0x08 0x5f 0x08 0x5a 0x08
        0x57 0x08 0x08 0x08 0x08 0x08 0x08 0x08
        0x08 0x08 0x08 0x08 0x5f 0x08 0x08 0x08
        0x5a 0x08 0x08 0x08 0x08 0x08 0x57 0x5f
        0x00

}
// mel0b
data tt_versatile_pattern1 {
        0x5a 0x08 0x08 0x08 0x08 0x08 0x5f 0x5d
        0x08 0x08 0x08 0x08 0x08 0x08 0x08 0x08
        0x57 0x08 0x08 0x08 0x08 0x08 0x54 0x5a
        0x08 0x08 0x08 0x08 0x08 0x08 0x08 0x08
        0x00

}
// mel0c
data tt_versatile_pattern2 {
        0x5d 0x08 0x08 0x08 0x08 0x08 0x08 0x08
        0x5a 0x08 0x08 0x08 0x08 0x08 0x08 0x08
        0x08 0x08 0x08 0x08 0x5f 0x08 0x08 0x08
        0x5d 0x08 0x08 0x08 0x5a 0x08 0x08 0x08
        0x00

}
// mel0d
data tt_versatile_pattern3 {
        0x57 0x08 0x08 0x08 0x54 0x08 0x5f 0x5a
        0x08 0x08 0x08 0x08 0x54 0x08 0x5f 0x5d
        0x08 0x08 0x08 0x08 0x08 0x08 0x08 0x08
        0x5f 0x08 0x5d 0x08 0x57 0x08 0x5a 0x08
        0x00

}
// mel1a
data tt_versatile_pattern4 {
        0x54 0x3f 0x57 0x4b 0x5a 0x4c 0x53 0x3d
        0x51 0x08 0x08 0x08 0x08 0x08 0x08 0x08
        0x3d 0x3f 0x4b 0x08 0x08 0x08 0x08 0x08
        0x3f 0x4b 0x4f 0x08 0x4b 0x08 0x3d 0x4b
        0x00

}
// mel1b
data tt_versatile_pattern5 {
        0x3d 0x3a 0x3f 0x08 0x08 0x08 0x4b 0x3f
        0x3d 0x3f 0x4b 0x08 0x08 0x08 0x08 0x08
        0x3a 0x08 0x08 0x08 0x3d 0x08 0x3f 0x3d
        0x08 0x08 0x08 0x3f 0x4b 0x3f 0x4f 0x4e
        0x00

}
// mel1c
data tt_versatile_pattern6 {
        0x4b 0x08 0x08 0x08 0x08 0x08 0x08 0x08
        0x3d 0x08 0x08 0x08 0x08 0x08 0x08 0x3f
        0x3a 0x08 0x08 0x08 0x08 0x08 0x08 0x08
        0x37 0x08 0x08 0x08 0x31 0x33 0x08 0x08
        0x00

}
// mel1c2
data tt_versatile_pattern7 {
        0x4b 0x08 0x08 0x08 0x08 0x08 0x08 0x08
        0x3d 0x08 0x08 0x08 0x08 0x08 0x08 0x3f
        0x3a 0x08 0x08 0x08 0x08 0x08 0x08 0x08
        0x31 0x33 0x08 0x08 0x37 0x33 0x08 0x08
        0x00

}
// mel1d
data tt_versatile_pattern8 {
        0x31 0x08 0x08 0x08 0x2e 0x08 0x33 0x31
        0x08 0x08 0x33 0x3a 0x08 0x08 0x3d 0x37
        0x08 0x08 0x08 0x08 0x08 0x08 0x08 0x08
        0x2e 0x2f 0x31 0x33 0x37 0x33 0x37 0x33
        0x00

}
 // this one must be renamed manually after since it contains the field name
data tt_versatile_PatternPtrLo {
        &<tt_versatile_pattern0 &<tt_versatile_pattern1 &<tt_versatile_pattern2 &<tt_versatile_pattern3
        &<tt_versatile_pattern4 &<tt_versatile_pattern5 &<tt_versatile_pattern6 &<tt_versatile_pattern7
        &<tt_versatile_pattern8
}
data tt_versatile_PatternPtrHi {
        &>tt_versatile_pattern0 &>tt_versatile_pattern1 &>tt_versatile_pattern2 &>tt_versatile_pattern3
        &>tt_versatile_pattern4 &>tt_versatile_pattern5 &>tt_versatile_pattern6 &>tt_versatile_pattern7
        &>tt_versatile_pattern8
}
data tt_versatile_SequenceTable {
    // ---------- Channel 0 ----------
        0x00 0x01 0x01 0x02 0x02 0x03 0x03 0x80

    // ---------- Channel 1 ----------
        0x04 0x05 0x05 0x06 0x07 0x08 0x08 0x88

}
