data print_font
{
    align 256
    0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 // <SPC>
    0x18 0x3c 0x66 0x7e 0x66 0x66 0x66 0x00 // A
    0x7c 0x66 0x66 0x7c 0x66 0x66 0x7c 0x00 // B
    0x3c 0x66 0x60 0x60 0x60 0x66 0x3c 0x00 // C
    0x78 0x6c 0x66 0x66 0x66 0x6c 0x78 0x00 // D
    0x7e 0x60 0x60 0x78 0x60 0x60 0x7e 0x00 // E
    0x7e 0x60 0x60 0x78 0x60 0x60 0x60 0x00 // F
    0x3c 0x66 0x60 0x6e 0x66 0x66 0x3c 0x00 // G
    0x66 0x66 0x66 0x7e 0x66 0x66 0x66 0x00 // H
    0x3c 0x18 0x18 0x18 0x18 0x18 0x3c 0x00 // I
    0x1e 0x0c 0x0c 0x0c 0x0c 0x6c 0x38 0x00 // J
    0x66 0x6c 0x78 0x70 0x78 0x6c 0x66 0x00 // K
    0x60 0x60 0x60 0x60 0x60 0x60 0x7e 0x00 // L
    0x63 0x77 0x7f 0x6b 0x63 0x63 0x63 0x00 // M
    0x66 0x76 0x7e 0x7e 0x6e 0x66 0x66 0x00 // N
    0x3c 0x66 0x66 0x66 0x66 0x66 0x3c 0x00 // O
    0x7c 0x66 0x66 0x7c 0x60 0x60 0x60 0x00 // P
    0x3c 0x66 0x66 0x66 0x66 0x3c 0x0e 0x00 // Q
    0x7c 0x66 0x66 0x7c 0x78 0x6c 0x66 0x00 // R
    0x3c 0x66 0x60 0x3c 0x06 0x66 0x3c 0x00 // S
    0x7e 0x18 0x18 0x18 0x18 0x18 0x18 0x00 // T
    0x66 0x66 0x66 0x66 0x66 0x66 0x3c 0x00 // U
    0x66 0x66 0x66 0x66 0x66 0x3c 0x18 0x00 // V
    0x63 0x63 0x63 0x6b 0x7f 0x77 0x63 0x00 // W
    0x66 0x66 0x3c 0x18 0x3c 0x66 0x66 0x00 // X
    0x66 0x66 0x66 0x3c 0x18 0x18 0x18 0x00 // Y
    0x7e 0x06 0x0c 0x18 0x30 0x60 0x7e 0x00 // Z
    0x3c 0x66 0x6e 0x76 0x66 0x66 0x3c 0x00 // 0
    0x3c 0x66 0x66 0x3c 0x66 0x66 0x3c 0x00 // 8
    /*
    0x18 0x18 0x38 0x18 0x18 0x18 0x7e 0x00 // 1
    0x3c 0x66 0x06 0x0c 0x30 0x60 0x7e 0x00 // 2
    0x3c 0x66 0x06 0x1c 0x06 0x66 0x3c 0x00 // 3
    0x06 0x0e 0x1e 0x66 0x7f 0x06 0x06 0x00 // 4
    0x7e 0x60 0x7c 0x06 0x06 0x66 0x3c 0x00 // 5
    0x3c 0x66 0x60 0x7c 0x66 0x66 0x3c 0x00 // 6
    0x7e 0x66 0x0c 0x18 0x18 0x18 0x18 0x00 // 7
    0x3c 0x66 0x66 0x7e 0x06 0x66 0x3c 0x00 // 9
    */
}

// print_txt = text pointer, can cross
// a = line count
func print
{
    print_line_count=a
    NUSIZ1=NUSIZ0=a=6
    // load font
    a=&>print_font x=23 { print_ptr,x=a x-- x-- }>=0 
    // position sprites
    nocross { wsync x=6 { x-- }!= RESP0=a * RESP1=a HMP0=a=0x70 HMP1=a=0x60 wsync hmove }
    {
        // load text line
        x=0 y=0 { a=(print_txt),y print_ptr,x=a x++ x++ y++ y?12 }!=
        HMP1=HMP0=a=0x80
        y=0 nocross {
            wsync hmove
            // first scanline
            GRP0=a=(print_ptr+2),y GRP1=a=(print_ptr+6),y
            a=(print_ptr+22),y x=a *6
            GRP0=a=(print_ptr+10),y GRP1=a=(print_ptr+14),y GRP0=a=(print_ptr+18),y GRP1=x
            hmclr *8 hmove
            // second scanline
            GRP0=a=(print_ptr),y GRP1=a=(print_ptr+4),y
            a=(print_ptr+20),y x=a HMP1=HMP0=a=0x80 *
            GRP0=a=(print_ptr+8),y GRP1=a=(print_ptr+12),y GRP0=a=(print_ptr+16),y GRP1=x
            y++ y?8
        }!=
        print_line_count-- ==goto .end
        a=print_txt c- a+12 print_txt=a a=print_txt+1 a+0 print_txt+1=a
    } always
.end:
    GRP1=GRP0=a=0
}
